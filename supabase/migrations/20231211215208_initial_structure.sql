create extension if not exists "vector" with schema "extensions";


create table "public"."recipes" (
    "id" bigint generated by default as identity not null,
    "created_at" timestamp with time zone not null default now(),
    "content" text not null,
    "title" text not null,
    "original_link" text,
    "embedding" vector(768)
);


alter table "public"."recipes" enable row level security;

CREATE UNIQUE INDEX recipes_pkey ON public.recipes USING btree (id);

alter table "public"."recipes" add constraint "recipes_pkey" PRIMARY KEY using index "recipes_pkey";

set check_function_bodies = off;

CREATE OR REPLACE FUNCTION public.match_recipes(query_embedding vector, match_threshold double precision, match_count integer)
 RETURNS TABLE(id bigint, content text, title text, similarity double precision)
 LANGUAGE sql
 STABLE
AS $function$
  select
    recipes.id,
    recipes.content,
    recipes.title,
    1 - (recipes.embedding <=> query_embedding) as similarity
  from recipes
  where recipes.embedding <=> query_embedding < 1 - match_threshold
  order by recipes.embedding <=> query_embedding
  limit match_count;
$function$
;

grant delete on table "public"."recipes" to "anon";

grant insert on table "public"."recipes" to "anon";

grant references on table "public"."recipes" to "anon";

grant select on table "public"."recipes" to "anon";

grant trigger on table "public"."recipes" to "anon";

grant truncate on table "public"."recipes" to "anon";

grant update on table "public"."recipes" to "anon";

grant delete on table "public"."recipes" to "authenticated";

grant insert on table "public"."recipes" to "authenticated";

grant references on table "public"."recipes" to "authenticated";

grant select on table "public"."recipes" to "authenticated";

grant trigger on table "public"."recipes" to "authenticated";

grant truncate on table "public"."recipes" to "authenticated";

grant update on table "public"."recipes" to "authenticated";

grant delete on table "public"."recipes" to "service_role";

grant insert on table "public"."recipes" to "service_role";

grant references on table "public"."recipes" to "service_role";

grant select on table "public"."recipes" to "service_role";

grant trigger on table "public"."recipes" to "service_role";

grant truncate on table "public"."recipes" to "service_role";

grant update on table "public"."recipes" to "service_role";


